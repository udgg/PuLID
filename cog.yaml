# Configuration for Cog ⚙️
# Reference: https://cog.run/yaml

build:
  # set to true if your model requires a GPU
  gpu: true

  # a list of ubuntu apt packages to install
  system_packages:
    - "libgl1-mesa-glx"
    - "libglib2.0-0"
    - "libjpeg-dev"
    - "libpng-dev"

  # python version in the form '3.11' or '3.11.4'
  python_version: "3.10.14"

  # a list of packages in the format <package-name>==<version>
  python_packages:
    - torch==2.0.1
    - torchvision==0.15.2
    - diffusers==0.25.0
    - transformers==4.43.3
    - opencv-python
    - httpx==0.23.3
    - numpy>=1.24.4
    - timm
    - einops
    - ftfy
    - basicsr
    - facexlib
    - insightface
    - onnxruntime-gpu
    - accelerate
    - SentencePiece
    - fire
    - safetensors
    - invisible-watermark
    - setuptools
    # https://github.com/replicate/cog/issues/1623
    - "albumentations==1.4.3"
    - "pydantic==1.10.11"


  # commands run after the environment is setup
  run:
    - curl -o /usr/local/bin/pget -L "https://github.com/replicate/pget/releases/download/v0.8.1/pget_linux_x86_64" && chmod +x /usr/local/bin/pget
    - pip install --upgrade torch numpy torchvision
    - "sed -i '8s/from torchvision.transforms.functional_tensor import rgb_to_grayscale/from torchvision.transforms.functional import rgb_to_grayscale/' /root/.pyenv/versions/3.10.14/lib/python3.10/site-packages/basicsr/data/degradations.py"
    # - "sed -i 's/from torchvision.transforms import functional_tensor as F/from torchvision.transforms import functional as F/' /root/.pyenv/versions/3.10.14/lib/python3.10/site-packages/torchvision/transforms/functional_tensor.py"



# predict.py defines how predictions are run on your model
predict: "predict.py:Predictor"
